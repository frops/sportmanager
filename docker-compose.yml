version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: webservice-frontend:latest
    restart: always
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://${HOST_IP:-localhost}:8080

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: webservice-backend:latest
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_NAME=${DB_NAME:-football}
      - DB_PORT=5432
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-football}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
